%% -*- mode: erlang -*-
%% ex: ft=erlang
{sys, [
    {lib_dirs, ["../deps/", "../apps/"]},
    {erts, [{mod_cond, derived}, {app_file, strip}]},
    {app_file, strip},
    {rel, "snakes", "1",
        [
            kernel,
            stdlib,
            sasl,
            snakes
        ]},
    {rel, "start_clean", "",
        [
            kernel,
            stdlib
        ]},
    {boot_rel, "snakes"},
    {profile, embedded},
    {incl_cond, exclude},
    {excl_archive_filters, [".*"]}, %% Do not archive built libs
    {excl_sys_filters, ["^bin/(?!start_clean.boot)",
        "^erts.*/bin/(dialyzer|typer)",
        "^erts.*/(doc|info|include|lib|man|src)"]},
    {excl_app_filters, ["\.gitignore"]},
    
    
    %% Erlang existing libs
    %% {app, appmon,                [{incl_cond, include}]},
    {app, asn1,                  [{incl_cond, include}]},
    {app, compiler,              [{incl_cond, include}]},
    {app, crypto,                [{incl_cond, include}]},
    {app, eunit,                 [{incl_cond, include}]},
    {app, gs,                    [{incl_cond, include}]},
    {app, inets,                 [{incl_cond, include}]},
    {app, kernel,                [{incl_cond, include}]},
    {app, mnesia,                [{incl_cond, include}]},
    {app, observer,              [{incl_cond, include}]},
    {app, os_mon,                [{incl_cond, include}]},
    {app, public_key,            [{incl_cond, include}]},
    {app, runtime_tools,         [{incl_cond, include}]},
    {app, sasl,                  [{incl_cond, include}]},
    {app, snmp,                  [{incl_cond, include}]},
    {app, ssl,                   [{incl_cond, include}]},
    {app, stdlib,                [{incl_cond, include}]},
    {app, syntax_tools,          [{incl_cond, include}]},
    {app, tools,                 [{incl_cond, include}]},
    {app, xmerl,                 [{incl_cond, include}]},
    {app, hipe,                  [{incl_cond, exclude}]},
    
    
    {app, emysql, [{mod_cond, app}, {incl_cond, include}]},
    {app, goldrush, [{mod_cond, app}, {incl_cond, include}]},
    {app, jiffy, [{mod_cond, app}, {incl_cond, include}]},
    {app, lager, [{mod_cond, app}, {incl_cond, include}]},
    {app, rfc4627_jsonrpc, [{mod_cond, app}, {incl_cond, include}]},
    
    {app, config, [{mod_cond, app}, {incl_cond, include}]},
    {app, common, [{mod_cond, ebin}, {incl_cond, include}]},
    {app, ets_cache, [{mod_cond, app}, {incl_cond, include}]},
    {app, listen, [{mod_cond, app}, {incl_cond, include}]},
    
    {app, snakes, [{mod_cond, app}, {incl_cond, include}, {lib_dir, ".."}]}
]}.

{target_dir, "snakes"}.

{overlay, [
    {mkdir, "log/sasl"},
    {copy, "files/erl", "\{\{erts_vsn\}\}/bin/erl"},
    {copy, "files/nodetool", "releases/\{\{rel_vsn\}\}/nodetool"},
    {copy, "snakes/bin/start_clean.boot",
        "\{\{erts_vsn\}\}/bin/start_clean.boot"},
    {copy, "files/snakes", "bin/snakes"},
    {copy, "files/snakes.cmd", "bin/snakes.cmd"},
    {copy, "files/start_erl.cmd", "bin/start_erl.cmd"},
    %% Following line may be safely removed in new projects
    {copy, "files/install_upgrade.escript", "bin/install_upgrade.escript"},
    {copy, "files/sys.config", "releases/\{\{rel_vsn\}\}/sys.config"},
    {copy, "files/vm.args", "releases/\{\{rel_vsn\}\}/vm.args"}
]}.
